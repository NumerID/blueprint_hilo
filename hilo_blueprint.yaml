blueprint:
  name: Blueprint Hilo
  description: Blueprint permettant de configurer la température des thermostats selon le statut du sensor defi hilo. L'intégration HACS Hilo avec Home Assistant est requise pour utiliser ce blueprint.
  domain: automation
  input:
    thermostats_defi:
      name: Thermostats Défi
      selector:
        target:
          entity:
            domain: climate    
    temperature_appreciation:
      name: Température lors des périodes d'ancrage
      description: Température à configurer lorsque le sensor.defi_hilo est dans le statut appreciation. C'est la température à à configurer lorsque le système est dans sa période d'ancrage.
      selector:
        number:
          min: 15
          max: 25
          unit_of_measurement: celcius      
    temperature_pre_heat:
      name: Température de Pré Chauffage
      description: Température à configurer lorsque le sensor.defi_hilo est dans le statut pre_heat. C'est la température à monter la maison avant le début du défi.
      selector:
        number:
          min: 15
          max: 25
          unit_of_measurement: celcius
    temperature_reduction:
      name: Température lors du défi
      description: Température à configurer lorsque le sensor.defi_hilo est dans le statut reduction. C'est la température à descendre la maison lors du début du défi.
      selector:
        number:
          min: 15
          max: 25
          unit_of_measurement: celcius
    temperature_recovery:
      name: Température de retour à la normale
      description: Température à configurer lorsque le sensor.defi_hilo est dans le statut recovery. C'est la température de retour à la normale après le défi.
      selector:
        number:
          min: 15
          max: 25
          unit_of_measurement: celcius    
variables:  
  temperature_appreciation_state: !input temperature_appreciation
  temperature_pre_heat_state: !input temperature_pre_heat
  temperature_reduction_state: !input temperature_reduction
  temperature_recovery_state: !input temperature_recovery
  appreciation_time: null
  pre_heat_time: null
  reduction_time: null
  recovery_time: null

triggers:
  - trigger: state
    entity_id: sensor.defi_hilo
    to: scheduled
    id: defi_scheduled
  - trigger: state
    entity_id: sensor.defi_hilo
    to: pre_heat
    id: defi_pre_heat
  - trigger: state
    entity_id: sensor.defi_hilo
    to: reduction
    id: defi_reduction
  - trigger: state
    entity_id: sensor.defi_hilo
    to: recovery
    id: defi_recovery
  - trigger: state
    entity_id: sensor.defi_hilo
    to: appreciation
    id: defi_appreciation
  - trigger: template
    value_template: {{now() >= states('appreciation_time') | as_datetime}}
    id: defi_appreciation_time
  - trigger: template
    value_template: {{now() >= states('pre_heat_time') | as_datetime}}
    id: defi_pre_heat_time
  - trigger: template
    value_template: {{now() >= states('reduction_time') | as_datetime}}
    id: defi_reduction_time
  - trigger: template
    value_template: {{now() >= states('recovery_time') | as_datetime}}
    id: defi_recovery_time
actions:
  - choose:
      - conditions:
          - condition: trigger
            id: defi_scheduled
        sequence:
          - variables:
              appreciation_time: "{{ state_attr('sensor.defi_hilo', 'next_events')[0].phases.appreciation_start | as_datetime }}"
              pre_heat_time: "{{ state_attr('sensor.defi_hilo', 'next_events')[0].phases.preheat_start | as_datetime }}"
              reduction_time: "{{ state_attr('sensor.defi_hilo', 'next_events')[0].phases.reduction_start | as_datetime }}"
              recovery_time: "{{ state_attr('sensor.defi_hilo', 'next_events')[0].phases.recovery_start | as_datetime }}"          
      - conditions:
          - condition: trigger
            id: defi_pre_heat
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ temperature_pre_heat_state }}"
            target: !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_pre_heat_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_pre_heat_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_pre_heat_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_pre_heat_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_reduction
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ temperature_reduction_state }}"
            target: !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_reduction_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_reduction_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_reduction_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_reduction_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_recovery
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ temperature_recovery_state }}"
            target: !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_recovery_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_recovery_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_recovery_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_recovery_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_appreciation
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_appreciation_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_apprication_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ states[temperature_appreciation_state].state | int}}"
            target:
              entity_id: 
                - !input thermostats_defi
      - conditions:
          - condition: trigger
            id: defi_apprication_time
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ temperature_appreciation_state }}"
            target: !input thermostats_defi
